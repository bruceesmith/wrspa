/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@import url("dark.css");
@import url("light.css");
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
    'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',
    monospace;
    --color-teal-500: oklch(70.4% 0.14 182.503);
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-bold: 700;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji');
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type='button'], [type='reset'], [type='submit']), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
}
@layer utilities {
  .static {
    position: static;
  }
  .col-2 {
    grid-column: 2;
  }
  .col-start-3 {
    grid-column-start: 3;
  }
  .grid {
    display: grid;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
  .grid-cols-7 {
    grid-template-columns: repeat(7, minmax(0, 1fr));
  }
  .grid-rows-2 {
    grid-template-rows: repeat(2, minmax(0, 1fr));
  }
  .grid-rows-3 {
    grid-template-rows: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-4 {
    grid-template-rows: repeat(4, minmax(0, 1fr));
  }
  .grid-rows-5 {
    grid-template-rows: repeat(5, minmax(0, 1fr));
  }
  .grid-rows-\[1fr_3fr_1fr\] {
    grid-template-rows: 1fr 3fr 1fr;
  }
  .place-content-center {
    place-content: center;
  }
  .content-center {
    align-content: center;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-1 {
    gap: calc(0.4rem * 1);
  }
  .gap-2 {
    gap: calc(0.4rem * 2);
  }
  .gap-4 {
    gap: calc(0.4rem * 4);
  }
  .self-center {
    align-self: center;
  }
  .justify-self-center {
    justify-self: center;
  }
  .justify-self-end {
    justify-self: flex-end;
  }
  .justify-self-start {
    justify-self: flex-start;
  }
  .justify-self-stretch {
    justify-self: stretch;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-b-none {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-on-primary-container {
    border-color: var(--md-sys-color-on-primary-container);
  }
  .border-on-secondary-container {
    border-color: var(--md-sys-color-on-secondary-container);
  }
  .border-on-tertiary-container {
    border-color: var(--md-sys-color-on-tertiary-container);
  }
  .border-primary {
    border-color: var(--md-sys-color-primary);
  }
  .border-secondary {
    border-color: var(--md-sys-color-secondary);
  }
  .border-tertiary {
    border-color: var(--md-sys-color-tertiary);
  }
  .bg-error {
    background-color: var(--md-sys-color-error);
  }
  .bg-primary {
    background-color: var(--md-sys-color-primary);
  }
  .bg-primary-container {
    background-color: var(--md-sys-color-primary-container);
  }
  .bg-primary-container\/20 {
    background-color: var(--md-sys-color-primary-container);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--md-sys-color-primary-container) 20%, transparent);
    }
  }
  .bg-primary\/20 {
    background-color: var(--md-sys-color-primary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--md-sys-color-primary) 20%, transparent);
    }
  }
  .bg-secondary {
    background-color: var(--md-sys-color-secondary);
  }
  .bg-secondary-container {
    background-color: var(--md-sys-color-secondary-container);
  }
  .bg-secondary-container\/20 {
    background-color: var(--md-sys-color-secondary-container);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--md-sys-color-secondary-container) 20%, transparent);
    }
  }
  .bg-secondary\/20 {
    background-color: var(--md-sys-color-secondary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--md-sys-color-secondary) 20%, transparent);
    }
  }
  .bg-teal-500 {
    background-color: var(--color-teal-500);
  }
  .bg-tertiary {
    background-color: var(--md-sys-color-tertiary);
  }
  .bg-tertiary-container {
    background-color: var(--md-sys-color-tertiary-container);
  }
  .bg-tertiary-container\/20 {
    background-color: var(--md-sys-color-tertiary-container);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--md-sys-color-tertiary-container) 20%, transparent);
    }
  }
  .bg-tertiary\/20 {
    background-color: var(--md-sys-color-tertiary);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--md-sys-color-tertiary) 20%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .p-1 {
    padding: calc(0.4rem * 1);
  }
  .p-2 {
    padding: calc(0.4rem * 2);
  }
  .px-2 {
    padding-inline: calc(0.4rem * 2);
  }
  .px-3 {
    padding-inline: calc(0.4rem * 3);
  }
  .px-3\.5 {
    padding-inline: calc(0.4rem * 3.5);
  }
  .px-4 {
    padding-inline: calc(0.4rem * 4);
  }
  .px-5 {
    padding-inline: calc(0.4rem * 5);
  }
  .py-1 {
    padding-block: calc(0.4rem * 1);
  }
  .py-1\.5 {
    padding-block: calc(0.4rem * 1.5);
  }
  .py-2 {
    padding-block: calc(0.4rem * 2);
  }
  .py-2\.5 {
    padding-block: calc(0.4rem * 2.5);
  }
  .pt-1 {
    padding-top: calc(0.4rem * 1);
  }
  .pb-1 {
    padding-bottom: calc(0.4rem * 1);
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-on-primary {
    color: var(--md-sys-color-on-primary);
  }
  .text-on-primary-container {
    color: var(--md-sys-color-on-primary-container);
  }
  .text-on-secondary-container {
    color: var(--md-sys-color-on-secondary-container);
  }
  .text-on-tertiary-container {
    color: var(--md-sys-color-on-tertiary-container);
  }
  .text-primary {
    color: var(--md-sys-color-primary);
  }
  .text-secondary {
    color: var(--md-sys-color-secondary);
  }
  .text-tertiary {
    color: var(--md-sys-color-tertiary);
  }
  .italic {
    font-style: italic;
  }
  .placeholder-on-primary-container {
    &::placeholder {
      color: var(--md-sys-color-on-primary-container);
    }
  }
  .placeholder-on-secondary-container {
    &::placeholder {
      color: var(--md-sys-color-on-secondary-container);
    }
  }
  .placeholder-on-tertiary-container {
    &::placeholder {
      color: var(--md-sys-color-on-tertiary-container);
    }
  }
  .placeholder-primary {
    &::placeholder {
      color: var(--md-sys-color-primary);
    }
  }
  .placeholder-secondary {
    &::placeholder {
      color: var(--md-sys-color-secondary);
    }
  }
  .placeholder-tertiary {
    &::placeholder {
      color: var(--md-sys-color-tertiary);
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-1 {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-on-primary-container {
    outline-color: var(--md-sys-color-on-primary-container);
  }
  .outline-on-tertiary-container {
    outline-color: var(--md-sys-color-on-tertiary-container);
  }
  .outline-primary {
    outline-color: var(--md-sys-color-primary);
  }
  .outline-secondary {
    outline-color: var(--md-sys-color-secondary);
  }
  .outline-tertiary {
    outline-color: var(--md-sys-color-tertiary);
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .hover\:text-on-primary-container\/50 {
    &:hover {
      @media (hover: hover) {
        color: var(--md-sys-color-on-primary-container);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--md-sys-color-on-primary-container) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-on-secondary-container\/50 {
    &:hover {
      @media (hover: hover) {
        color: var(--md-sys-color-on-secondary-container);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--md-sys-color-on-secondary-container) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-on-tertiary-container\/50 {
    &:hover {
      @media (hover: hover) {
        color: var(--md-sys-color-on-tertiary-container);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--md-sys-color-on-tertiary-container) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-primary\/50 {
    &:hover {
      @media (hover: hover) {
        color: var(--md-sys-color-primary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--md-sys-color-primary) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-secondary\/50 {
    &:hover {
      @media (hover: hover) {
        color: var(--md-sys-color-secondary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--md-sys-color-secondary) 50%, transparent);
        }
      }
    }
  }
  .hover\:text-tertiary\/50 {
    &:hover {
      @media (hover: hover) {
        color: var(--md-sys-color-tertiary);
        @supports (color: color-mix(in lab, red, red)) {
          color: color-mix(in oklab, var(--md-sys-color-tertiary) 50%, transparent);
        }
      }
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-current {
    &:focus {
      --tw-ring-color: currentcolor;
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .hover\:enabled\:border-on-primary-container {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          border-color: var(--md-sys-color-on-primary-container);
        }
      }
    }
  }
  .hover\:enabled\:border-on-secondary-container {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          border-color: var(--md-sys-color-on-secondary-container);
        }
      }
    }
  }
  .hover\:enabled\:border-on-tertiary-container {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          border-color: var(--md-sys-color-on-tertiary-container);
        }
      }
    }
  }
  .hover\:enabled\:border-primary {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          border-color: var(--md-sys-color-primary);
        }
      }
    }
  }
  .hover\:enabled\:border-secondary {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          border-color: var(--md-sys-color-secondary);
        }
      }
    }
  }
  .hover\:enabled\:border-tertiary {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          border-color: var(--md-sys-color-tertiary);
        }
      }
    }
  }
  .hover\:enabled\:bg-primary-container\/30 {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          background-color: var(--md-sys-color-primary-container);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--md-sys-color-primary-container) 30%, transparent);
          }
        }
      }
    }
  }
  .hover\:enabled\:bg-primary\/30 {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          background-color: var(--md-sys-color-primary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--md-sys-color-primary) 30%, transparent);
          }
        }
      }
    }
  }
  .hover\:enabled\:bg-secondary-container\/30 {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          background-color: var(--md-sys-color-secondary-container);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--md-sys-color-secondary-container) 30%, transparent);
          }
        }
      }
    }
  }
  .hover\:enabled\:bg-secondary\/30 {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          background-color: var(--md-sys-color-secondary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--md-sys-color-secondary) 30%, transparent);
          }
        }
      }
    }
  }
  .hover\:enabled\:bg-tertiary-container\/30 {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          background-color: var(--md-sys-color-tertiary-container);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--md-sys-color-tertiary-container) 30%, transparent);
          }
        }
      }
    }
  }
  .hover\:enabled\:bg-tertiary\/30 {
    &:hover {
      @media (hover: hover) {
        &:enabled {
          background-color: var(--md-sys-color-tertiary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--md-sys-color-tertiary) 30%, transparent);
          }
        }
      }
    }
  }
  .focus\:enabled\:border-on-primary-container {
    &:focus {
      &:enabled {
        border-color: var(--md-sys-color-on-primary-container);
      }
    }
  }
  .focus\:enabled\:border-on-secondary-container {
    &:focus {
      &:enabled {
        border-color: var(--md-sys-color-on-secondary-container);
      }
    }
  }
  .focus\:enabled\:border-on-tertiary-container {
    &:focus {
      &:enabled {
        border-color: var(--md-sys-color-on-tertiary-container);
      }
    }
  }
  .focus\:enabled\:border-primary {
    &:focus {
      &:enabled {
        border-color: var(--md-sys-color-primary);
      }
    }
  }
  .focus\:enabled\:border-secondary {
    &:focus {
      &:enabled {
        border-color: var(--md-sys-color-secondary);
      }
    }
  }
  .focus\:enabled\:border-tertiary {
    &:focus {
      &:enabled {
        border-color: var(--md-sys-color-tertiary);
      }
    }
  }
  .active\:enabled\:scale-\[98\%\] {
    &:active {
      &:enabled {
        scale: 98%;
      }
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .sm\:px-5 {
    @media (width >= 40rem) {
      padding-inline: calc(0.4rem * 5);
    }
  }
  .md\:px-25 {
    @media (width >= 48rem) {
      padding-inline: calc(0.4rem * 25);
    }
  }
  .lg\:px-50 {
    @media (width >= 64rem) {
      padding-inline: calc(0.4rem * 50);
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
